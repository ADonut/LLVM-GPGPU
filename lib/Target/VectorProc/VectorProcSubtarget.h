//===-- VectorProcSubtarget.h - Define Subtarget for the VECTORPROC -------*- C++ -*-===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// This file declares the VECTORPROC specific subclass of TargetSubtargetInfo.
//
//===----------------------------------------------------------------------===//

#ifndef VECTORPROC_SUBTARGET_H
#define VECTORPROC_SUBTARGET_H

#include "llvm/Target/TargetSubtargetInfo.h"
#include <string>

#define GET_SUBTARGETINFO_HEADER
#include "VectorProcGenSubtargetInfo.inc"

namespace llvm {
class StringRef;

class VectorProcSubtarget : public VectorProcGenSubtargetInfo {
  virtual void anchor();
  
public:
  VectorProcSubtarget(const std::string &TT, const std::string &CPU,
                 const std::string &FS);

  /// ParseSubtargetFeatures - Parses features string setting specified 
  /// subtarget options.  Definition of function is auto generated by tblgen.
  void ParseSubtargetFeatures(StringRef CPU, StringRef FS);
  
  std::string getDataLayout() const {
    const char *p;
    p = "E-p:32:32:32-i64:64:64-f64:64:64-f128:64:64-n32";
    return std::string(p);
  }

  /// The 64-bit ABI uses biased stack and frame pointers, so the stack frame
  /// of the current function is the area from [%sp+BIAS] to [%fp+BIAS].
  int64_t getStackPointerBias() const {
    return 0;
  }
};

} // end namespace llvm

#endif
